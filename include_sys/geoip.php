<?php

function gettg($s,$n) { return (!preg_match("/<".$n.">([^<>]+)<\/".$n.">/si",$s,$l)?false:$l[1]); }

function net6($ip){ return ($GLOBALS['msq_INET6']?"'".ip2ipn($ip)."'":"INET6_ATON('".e($ip)."')"); }

function geoip_read($ip) { // if(0==1*$ipn) idie("IPN error: `".h($ipn)."`");
    $IPN=net6($ip);
    return ms("SELECT d.`country`,d.`city` FROM `geoip` as g LEFT JOIN `geoipd` as d ON d.`i`=g.`i` WHERE ".$IPN." >=g.`from` AND ".$IPN." <=g.`to` LIMIT 1","_1");
}

function geoip_save($from,$to,$country,$city) { // $from=ip2ipn($m[1]); $to=ip2ipn($m[2]);
    // если есть такой IP
    if(geoip_read($ip)!==false) return "error geobase double $c";
    // есть ли такие города
    $i=ms("SELECT `i` FROM `geoipd` WHERE `country`='".e($country)."' AND `city`='".e($city)."'","_l");
    if($i===false) { msq_add('geoipd',arae(array('country'=>$country,'city'=>$city))); $i=msq_id(); }
    return msq_add1('geoip',array('i'=>$i,'from'=>net6($from),'to'=>net6($to)));
}

function geoip($ip,$ipn=0) { // if(!$ipn) $ipn=ip2ipn($ip);
	// if(empty($ipn)) {
	//    if(($r=ipgeobase($ip)) && $r['city']!='') return $r;
	//    return array(); // idie("IP error Vital: `".h($ipn)."` `".h($ip)."`");
	// }

	if(($r=geoip_read($ip))) return $r; // в локальной базе
	if(($r=ipgeobase($ip)) && $r['city']!='') return $r; // на сервисе ipgeobase
	return geoip_whois($ip); // через whois
}

// остальное

// function freegeoip($ip) { include_once $GLOBALS['include_sys']."_files.php"; $g=fileget_timeout('http://freegeoip.net/xml/'.$ip,1); idie(h($g)); }

function ipgeobase($ip) {
	include_once $GLOBALS['include_sys']."_files.php";
	$g=fileget_timeout('http://ipgeobase.ru:7020/geo?ip='.$ip,1); if($g=='') return false;
	$s=gettg($g,'country'); $c=gettg($g,'city'); if($s===false || $c===false) return false;
	// записать интервал
	list($from,$to)=explode(' - ',gettg($g,'inetnum'));
	geoip_save($from,$to,$s,$c);
	return array('country'=>$s,'city'=>$c);
}

function geoip_whois($ip) { $ip=preg_replace("/[^ABCDEF\d\.\:]+/si",'',$ip);
	$a=''; exec("whois ".escapeshellcmd($ip),$a); $a=implode("\n",$a);

//        $a=preg_replace("/^.*\ninetnum:\s+/si","\ninetnum: ",$a); // очистить до
//        $a=preg_replace("/\nroute:\s.*$/si","",$a); // очистить после

	if(!preg_match("/\ncountry:\s+([a-z][a-z])\n/si",$a,$m)) return false; $country=strtoupper($m[1]);
	$city=whois_gorod($a);
	if(preg_match("/\ninetnum: (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s+\-\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})/si",$a,$m)
	|| preg_match("/\nNetRange:\s+([ABCDEF\d\.\:]+)\s+\-\s+([ABCDEF\d\.\:]+)/si",$a,$m)) geoip_save($m[1],$m[2],$country,$city);
	return array('inetnum'=>$m[1]." - ".$m[2],'country'=>$country,'city'=>$city,'a'=>$a);
}

// =================================================================================================================
function uatrim($l) { return trim(preg_replace("/[\t\r\n ]+/s"," ",$l)); }
function uanoindex($l) { $l=preg_replace("/[\d+\-]+[a-z]?[,\s]+/si","",$l); return preg_replace("/[\s,]+[\d+\-]+[a-z]?/s","",$l); }

function whois_gorod($a) { // найдем город!
	$e=explode("\n",$a);
	$maxadr=0; $maxper=0; $a=array(); $adr=array(); $last=0;

		foreach($e as $l) {
		    if(trim($l,"\n\r\t ")=='') continue;
		    if(stristr($l,"city: ")) return uatrim(trim(strstr($l,':'),':'));
		    if(stristr($l,"address: ")) {
			$last++; list(,$l)=explode(':',$l); $a[]=uatrim($l);
		    } else if($last&&!strstr($l,':')) { $last++; $a[]=uatrim($l); } // это продолжается адрес
		    else { if($last&&sizeof($a)) { $adr[]=$a; $a=array(); $last=0; } }
		}

	$a=array(); foreach($adr as $p) { if(sizeof($p)>sizeof($a)) $a=$p; }
	return uanoindex(implode(', ',$a));
}

$GLOBALS['flagistran']=array(''=>'',
'AD'=>'Андорра',
'AE'=>'Арабские Эмираты',
'AF'=>'Афганистан',
'AG'=>'Антигуа и Барбуда',
'AI'=>'Ангилья',
'AL'=>'Албания',
'AN'=>'Антильские о-ва',
'AO'=>'Ангола',
'AQ'=>'Антарктика',
'AR'=>'Аргентина',
'AS'=>'Американское Самоа',
'AT'=>'Австрия',
'AU'=>'Австралия',
'AM'=>'Армения',
'AW'=>'Аруба',
'AZ'=>'Азербайджан',
'BA'=>'Босния и Герцоговина',
'BB'=>'Барбадос',
'BD'=>'Бангладеш',
'BE'=>'Бельгия',
'BF'=>'Буркина-Фасо',
'BG'=>'Болгария',
'BH'=>'Бахрейн',
'BI'=>'Бурунди',
'BJ'=>'Бенин',
'BM'=>'Бермуды',
'BN'=>'Бруней',
'BO'=>'Боливия',
'BR'=>'Бразилия',
'BS'=>'Багамы',
'BT'=>'Бутан',
'BV'=>'О-в Бювет',
'BW'=>'Ботсвана',
'BY'=>'Белоруссия',
'BZ'=>'Белиз',
'CA'=>'Канада',
'CD'=>'Республика Конго',
'CF'=>'Центрально-Африканская Республика',
'CG'=>'Конго',
'CH'=>'Швейцария',
'CI'=>'Кот-д`Ивуар',
'CK'=>'О-ва Кука',
'CL'=>'Чили',
'CM'=>'Камерун',
'CN'=>'Китай',
'CO'=>'Колумбия',
'CR'=>'Коста-Рика',
'CU'=>'Куба',
'CV'=>'Кабо-Верде',
'CY'=>'Кипр',
'CZ'=>'Чехия',
'DE'=>'Германия',
'DJ'=>'Джибути',
'DK'=>'Дания',
'DM'=>'Доминика',
'DO'=>'Доминиканская Республика',
'DZ'=>'Алжир',
'EC'=>'Эквадор',
'EE'=>'Эстония',
'EG'=>'Египет',
'ER'=>'Эритрея',
'ES'=>'Испания',
'ET'=>'Эфиопия',
'EU'=>'Европа',
'FI'=>'Финляндия',
'FJ'=>'Фиджи',
'FK'=>'Фолклендские о-ва',
'FM'=>'Микронезия',
'FO'=>'Фарерские о-ва',
'FR'=>'Франция',
'GA'=>'Габон',
'GD'=>'Гренада',
'GE'=>'Грузия',
'GH'=>'Гана',
'GI'=>'Гибралтар',
'GL'=>'Гренландия',
'GM'=>'Гамбия',
'GN'=>'Гвинея',
'GP'=>'Гваделупа',
'GQ'=>'Экваториальная Гвинея',
'GR'=>'Греция',
'GT'=>'Гватемала',
'GU'=>'Гуам',
'GW'=>'Гвинея-Бисау',
'GY'=>'Гайана',
'HK'=>'Гонконг',
'HM'=>'О-ва Хирт и Макдоналдс',
'HN'=>'Гондурас',
'HR'=>'Хорватия',
'HT'=>'Гаити',
'HU'=>'Венгрия',
'ID'=>'Индонезия',
'IE'=>'Ирландия',
'IL'=>'Израиль',
'IN'=>'Индия',
'IO'=>'Британские территории в Индийском океане',
'IQ'=>'Ирак',
'IR'=>'Иран',
'IS'=>'Исландия',
'IT'=>'Италия',
'JM'=>'Ямайка',
'JO'=>'Иордания',
'JP'=>'Япония',
'KE'=>'Кения',
'KG'=>'Киргизстан',
'KH'=>'Камбоджа',
'KI'=>'Кирибати',
'KM'=>'Коморские о-ва',
'KN'=>'Сент-Китс и Невис',
'KP'=>'Северная Корея',
'KR'=>'Южная Корея',
'KW'=>'Кувейт',
'KY'=>'Каймановые о-ва',
'KZ'=>'Казахстан',
'LA'=>'Лаос',
'LB'=>'Ливан',
'LC'=>'Сент-Люсия',
'LI'=>'Лихтенштейн',
'LK'=>'Шри-Ланка',
'LR'=>'Либерия',
'LS'=>'Лесото',
'LT'=>'Литва',
'LU'=>'Люксембург',
'LV'=>'Латвия',
'LY'=>'Ливия',
'MA'=>'Марокко',
'MC'=>'Монако',
'MD'=>'Молдова',
'MG'=>'Мадагаскар',
'MH'=>'Маршалловы о-ва',
'MK'=>'Македония',
'ML'=>'Мали',
'MM'=>'Мьянма',
'MN'=>'Монголия',
'MO'=>'Макао',
'MP'=>'Северные Марианские о-ва',
'MQ'=>'Мартиника',
'MR'=>'Мавритания',
'MS'=>'Монтcеррат',
'MT'=>'Мальта',
'MU'=>'Маврикий',
'MV'=>'Мальдивы',
'MW'=>'Малави',
'MX'=>'Мексика',
'MY'=>'Малайзия',
'MZ'=>'Мозамбик',
'NA'=>'Намибия',
'NC'=>'Новая Каледония',
'NE'=>'Нигер',
'NF'=>'О-в Норфолк',
'NG'=>'Нигерия',
'NI'=>'Никарагуа',
'NL'=>'Нидерланды',
'NO'=>'Норвегия',
'NP'=>'Непал',
'NR'=>'Науру',
'NZ'=>'Новая Зеландия',
'OM'=>'Оман',
'PA'=>'Панама',
'PE'=>'Перу',
'PF'=>'Французская Полинезия',
'PG'=>'Папуа - Новая Гвинея',
'PH'=>'Филиппины',
'PK'=>'Пакистан',
'PL'=>'Польша',
'PM'=>'Сен-Пьер и Микелон',
'PR'=>'Пуэрто-Рико',
'PS'=>'Палестина',
'PT'=>'Португалия',
'PW'=>'Палау',
'PY'=>'Парагвай',
'QA'=>'Катар',
'RE'=>'О-в Реюньон',
'RO'=>'Румыния',
'RU'=>'Россия',
'RW'=>'Руанда',
'SA'=>'Саудовская Аравия',
'SB'=>'Соломоновы о-ва',
'SC'=>'Сейшелы',
'SD'=>'Судан',
'SE'=>'Швеция',
'SG'=>'Сингапур',
'SI'=>'Словения',
'SK'=>'Словакия',
'SL'=>'Сьерра-Леоне',
'SM'=>'Сан-Марино',
'SN'=>'Сенегал',
'SO'=>'Сомали',
'SR'=>'Суринам',
'ST'=>'Сан-Томе и Принсипи',
'SU'=>'СССР',
'SV'=>'Сальвадор',
'SY'=>'Сирия',
'SZ'=>'Свазиленд',
'TC'=>'О-ва Теркс и Кайкос',
'TD'=>'Чад',
'TF'=>'Французские южные территории',
'TG'=>'Того',
'TH'=>'Таиланд',
'TJ'=>'Таджикистан',
'TM'=>'Туркменистан',
'TN'=>'Тунис',
'TO'=>'Тонга',
'TP'=>'Восточный Тимор',
'TR'=>'Турция',
'TT'=>'Тринидад и Тобаго',
'TV'=>'Тувалу',
'TW'=>'Тайвань',
'TZ'=>'Танзания',
'UA'=>'Украина',
'UG'=>'Уганда',
'UK'=>'Великобритания',
'UM'=>'Малые о-ва США',
'US'=>'США',
'UY'=>'Уругвай',
'UZ'=>'Узбекистан',
'VA'=>'Ватикан',
'VC'=>'Сен-Винсент и Гренадины',
'VE'=>'Венесуэла',
'VG'=>'Виргинские о-ва (Британия)',
'VI'=>'Виргинские о-ва (США)',
'VN'=>'Вьетнам',
'VU'=>'Вануату',
'WS'=>'Самоа',
'YE'=>'Йемен',
'YU'=>'Югославия',
'ZA'=>'Южная Африка',
'ZM'=>'Замбия',
'ZR'=>'Заир',
'ZW'=>'Зимбабве');
?>